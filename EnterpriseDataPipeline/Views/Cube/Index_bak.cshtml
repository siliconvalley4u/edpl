@using System.Dynamic;
@using EnterpriseDataPipeline.Models;
@using System.Web.UI.WebControls;
@model IEnumerable<EnterpriseDataPipeline.Models.Storage>
@{
    ViewBag.Title = "SV4U Enterprise Data PipeLine";
    ViewBag.SourceDB = "BooksDB";
    ViewBag.DestinationDB = "BooksDB";    
    ViewBag.SourceTB = "Books";
    ViewBag.DestinationTB = "Books";

    ViewBag.Page = "";
}

@*<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/jquery-1.10.2.js"></script>
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>*@


<!--1. Load the jQUery library-->
@*<script src="http://code.jquery.com/jquery-latest.min.js" type="text/javascript"></script>*@

<!--2. Load the Google charts-->
<script type="text/javascript" src="https://www.google.com/jsapi"></script>

<!--4. AJAX javascript -->
<script type="text/javascript">
    // Load the Visualization API and the piechart package.
    google.load('visualization', '1', { 'packages': ['corechart'] });

    // Set a callback to run when the Google Visualization API is loaded.
    google.setOnLoadCallback(drawChart);

    @*function drawChart() {
        var jsonData = $.ajax({
            type: 'POST',
            dataType: 'json',
            contentType: 'application/json',
            url: '@Url.Action("Piechart")',
            data: '{}',
            success: function (chartsdata) {

                // Callback that creates and populates a data table,
                // instantiates the pie chart, passes in the data and
                // draws it.

                debugger;

                var data = new google.visualization.DataTable();

                data.addColumn('string', 'PlanName');
                data.addColumn('number', 'PaymentAmount');

                for (var i = 0; i < chartsdata.length; i++) {
                    data.addRow([chartsdata[i].PlanName, chartsdata[i].PaymentAmount]);
                }
                // Instantiate and draw our chart, passing in some options
                //var chart = new google.visualization.PieChart(document.getElementById('chartdiv'));
                //var chart = new google.visualization.ColumnChart(document.getElementById('chartdiv'));
                var chart = new google.visualization.ColumnChart(document.getElementById('barChartdiv'));

                chart.draw(data,
                  {
                      title: "Bar Chart",
                      //curveType: 'function',
                      position: "top",
                      fontsize: "12px",
                      //chartArea: { width: '100%', height: '680px' },
                      hAxis: { title: 'Plan Name', titleTextStyle: { color: '#333' } },
                      vAxis: { title: 'Payment Amount', minValue: 0 },
                      legend: { position: 'labeled', textStyle: { color: 'blue', fontSize: 12 }, alignment: 'start', labeledValueText: 'both' },
                      width: '680',
                      height: '480',
                      chartArea: { width: "60%", height: "70%" }    //Added by Anthony Lai on 2015-09-07 to allow allow lenged cut-off
                  });

                chart = new google.visualization.LineChart(document.getElementById('lineChartdiv'));

                chart.draw(data,
                  {
                      title: "Line Chart",
                      //curveType: 'function',
                      position: "top",
                      fontsize: "12px",
                      //chartArea: { width: '100%', height: '680px' },
                      hAxis: { title: 'Plan Name', titleTextStyle: { color: '#333' } },
                      vAxis: { title: 'Payment Amount', minValue: 0 },
                      legend: { position: 'labeled', textStyle: { color: 'blue', fontSize: 12 }, alignment: 'start', labeledValueText: 'both' },
                      width: '680',
                      height: '480',
                      chartArea: { width: "60%", height: "70%" }    //Added by Anthony Lai on 2015-09-07 to allow allow lenged cut-off
                  });

                var data2 = new google.visualization.DataTable();

                data2.addColumn('string', 'PlanName');
                data2.addColumn('number', 'PaymentAmount');
                data2.addColumn('number', 'PaymentAmount2');

                for (var i = 0; i < chartsdata.length; i++) {
                    data2.addRow([chartsdata[i].PlanName, chartsdata[i].PaymentAmount, chartsdata[i].PaymentAmount]);
                }


                chart = new google.visualization.ComboChart(document.getElementById('barLineChartdiv'));

                chart.draw(data2,
                  {
                      title: "Bar Line Chart",
                      //curveType: 'function',
                      position: "top",
                      fontsize: "12px",
                      //chartArea: { width: '100%', height: '680px' },
                      seriesType: 'bars',
                      series: { 1: { type: 'line' } },
                      hAxis: { title: 'Plan Name', titleTextStyle: { color: '#333' } },
                      vAxis: { title: 'Payment Amount', minValue: 0 },
                      tooltip: { isHtml: true },
                      legend: { position: 'labeled', textStyle: { color: 'blue', fontSize: 12 }, alignment: 'start', labeledValueText: 'both'},
                      width: '680',
                      height: '480',
                      chartArea: { width: "60%", height: "70%" }    //Added by Anthony Lai on 2015-09-07 to allow allow lenged cut-off
                  });

            },
            error: function () {
                alert("Error loading data! Please try again.");
            }
        }).responseText;

        //// Create our data table out of JSON data loaded from server.
        //var data = new google.visualization.DataTable(jsonData);

        //var options = {
        //    title: 'Company Performance',
        //    hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },
        //    vAxis: { minValue: 0 },
        //    width: 680
        //};

        //// Instantiate and draw our chart, passing in some options.
        //var chart = new google.visualization.ColumnChart(document.getElementById('chart_div'));
        //chart.draw(data, options);
    }*@

    function drawChart(chartsdata, x, y, xidx, yidx) {

        //debugger;

        if (chartsdata.val == undefined)
            return;

        var data = new google.visualization.DataTable();

        data.addColumn('string', x);
        data.addColumn('number', y);

        for (var i = 0; i < chartsdata.val.length-1; i++) {
            data.addRow([chartsdata.val[i][xidx], parseInt(chartsdata.val[i][yidx])]);
        }
        // Instantiate and draw our chart, passing in some options
        var chart = new google.visualization.PieChart(document.getElementById('pieChartdiv'));

        chart.draw(data,
          {
              title: "Pie Chart",
              //curveType: 'function',
              position: "top",
              fontsize: "12px",
              hAxis: { title: x, titleTextStyle: { color: '#333' } },
              vAxis: { title: y, minValue: 0 },
              legend: { position: 'labeled', textStyle: { color: 'blue', fontSize: 12 }, alignment: 'start', labeledValueText: 'both' },
              width: '880',
              height: '480',
              chartArea: { width: "60%", height: "70%" }    //Added by Anthony Lai on 2015-09-07 to allow allow lenged cut-off
          });

        //// Instantiate and draw our chart, passing in some options
        //chart = new google.visualization.ColumnChart(document.getElementById('barChartdiv'));

        //chart.draw(data,
        //  {
        //      title: "Bar Chart",
        //      //curveType: 'function',
        //      position: "top",
        //      fontsize: "12px",
        //      hAxis: { title: x, titleTextStyle: { color: '#333' } },
        //      vAxis: { title: y, minValue: 0 },
        //      legend: { position: 'labeled', textStyle: { color: 'blue', fontSize: 12 }, alignment: 'start', labeledValueText: 'both' },
        //      width: '880',
        //      height: '480',
        //      chartArea: { width: "60%", height: "70%" }    //Added by Anthony Lai on 2015-09-07 to allow allow lenged cut-off
        //  });

        //// Instantiate and draw our chart, passing in some options
        //chart = new google.visualization.LineChart(document.getElementById('lineChartdiv'));

        //chart.draw(data,
        //  {
        //      title: "Line Chart",
        //      //curveType: 'function',
        //      position: "top",
        //      fontsize: "12px",
        //      hAxis: { title: x, titleTextStyle: { color: '#333' } },
        //      vAxis: { title: y, minValue: 0 },
        //      legend: { position: 'labeled', textStyle: { color: 'blue', fontSize: 12 }, alignment: 'start', labeledValueText: 'both' },
        //      width: '880',
        //      height: '480',
        //      chartArea: { width: "60%", height: "70%" }    //Added by Anthony Lai on 2015-09-07 to allow allow lenged cut-off
        //  });

        var data2 = new google.visualization.DataTable();

        data2.addColumn('string', x);
        data2.addColumn('number', y + '1');
        data2.addColumn('number', y + '2');

        for (var K = 0; K < chartsdata.val.length - 1; K++) {
            //data2.addRow([chartsdata[i].x, chartsdata[i].y, chartsdata[i].y]);
            data2.addRow([chartsdata.val[K][xidx], parseInt(chartsdata.val[K][yidx]), parseInt(chartsdata.val[K][yidx])]);
        }


        chart = new google.visualization.ComboChart(document.getElementById('barLineChartdiv'));

        chart.draw(data2,
          {
              title: "Bar Line Chart",
              //curveType: 'function',
              position: "top",
              fontsize: "12px",
              seriesType: 'bars',
              series: { 1: { type: 'line' } },
              hAxis: { title: x, titleTextStyle: { color: '#333' } },
              vAxis: { title: y, minValue: 0 },
              tooltip: { isHtml: true },
              legend: { position: 'labeled', textStyle: { color: 'blue', fontSize: 12 }, alignment: 'start', labeledValueText: 'both' },
              width: '880',
              height: '480',
              chartArea: { width: "60%", height: "70%" }    //Added by Anthony Lai on 2015-09-07 to allow allow lenged cut-off
          });
    }

</script>


<script type="text/javascript">

    $(function () {
        $("#tabs").tabs();
    });

    var chartsdata = null;

    $(document).ready(function () {
        
        debugger;

        if (window.location.hash.length > 0) {
            var iframe = $('iframeCube').get(0);
            iframe.src = "http://142.0.252.93:9090/mondrian" + window.location.hash.substring(1);
        }

        //$('iframeCube').bind("reload", function () {
        $('iframeCube').load(function () {

            debugger;

            var page = this.contentDocument.baseURI.substring("http://142.0.252.93:9090/mondrian".length);
            window.location.hash = page;
        });


        $("body").css("background-color", "#F3F3F3")

        $("select").removeAttr("multiple");

        //debugger;   //Added by Anthony Lai to debug javascript; must be removed after debug is done

        //get source database
        $("#ddlSource").bind("change", function () {
            //debugger;
            $("#lbSourceTableError").css('visibility', 'hidden');
            $("#ddlSourceDB").css('visibility', 'hidden');
            $("#ddlSourceTable").css('visibility', 'hidden');
            $("#lbSourceTableError").empty();
            $("#ddlSourceDB").empty();
            $("#ddlSourceTable").empty();

            //$("#taSourceQueryResult").empty();

            var divSourceDB = $("#ddlSourceDB");
            var SelSource = $("#ddlSource").val();
            var SelSourceDB = '@ViewBag.SourceDB';
            var url = '@Url.Action("GetDB", "Analysis")';
            $.get(url, { storage: SelSource },
                function (data) {
                    //debugger;
                    if (data.success) {

                        //============================================================================================================================================
                        //Special handling for SPARK because databases and tables data return from the same query
                        if (SelSource == 'Spark') {
                            for (var i = 0; i < data.val.length; i++) {
                                if (data.val[i] == 'DB_END') {
                                    for (var k = i + 1; k < data.val.length - 1; k++) {
                                        //if (data.val[k] == SelSourceDB) {
                                        if (k == (i + 1)) {
                                            $("#ddlSourceTable").append('<option value="' + data.val[k] + '" selected="selected">' + data.val[k] + '</option>');
                                        }
                                        else
                                            $("#ddlSourceTable").append('<option value="' + data.val[k] + '">' + data.val[k] + '</option>');
                                    }
                                    break;
                                }
                            }
                            $("#ddlSourceTable").css('visibility', 'visible');

                            if (data.val.length > 0) {
                                SelSourceDB = data.val[data.val.length - 1][0];   //Get the default source database here

                                // Success, execute js code here
                                for (var i = 0; i < data.val.length - 1; i++) {   //set (i < data.val.length-1) to skip default source database
                                    if (data.val[i] == 'DB_END') {
                                        break;
                                    }

                                    if (data.val[i][0] == SelSourceDB) {
                                        divSourceDB.append('<option value="' + data.val[i] + '" selected="selected">' + data.val[i] + '</option>');
                                    }
                                    else
                                        divSourceDB.append('<option value="' + data.val[i] + '">' + data.val[i] + '</option>');
                                }
                                divSourceDB.css('visibility', 'visible');
                            }

                            //$("#ddlSourceDB").trigger("change");    //trigger a change to dropdownlist for source database and load its corresponding tables

                            $("#ddlSourceTable").trigger("change");

                        }//END if (SelSource == 'Spark')
                            //============================================================================================================================================


                            //********************************************************************************************************************************************
                        else {
                            if (data.val.length > 0) {
                                SelSourceDB = data.val[data.val.length - 1][0];   //Get the default source database here

                                // Success, execute js code here
                                for (var i = 0; i < data.val.length - 1; i++) {   //set (i < data.val.length-1) to skip default source database
                                    if (data.val[i] == 'DB_END') {
                                        break;
                                    }

                                    if (data.val[i][0] == SelSourceDB) {
                                        divSourceDB.append('<option value="' + data.val[i] + '" selected="selected">' + data.val[i] + '</option>');
                                    }
                                    else
                                        divSourceDB.append('<option value="' + data.val[i] + '">' + data.val[i] + '</option>');
                                }
                                divSourceDB.css('visibility', 'visible');
                            }

                            $("#ddlSourceDB").trigger("change");    //trigger a change to dropdownlist for source database and load its corresponding tables
                        }
                        //********************************************************************************************************************************************

                    }
                    else {
                        // Error, execute js code here
                        $("#lbSourceTableError").html(data.val);
                        $("#lbSourceTableError").css('visibility', 'visible');
                        divSourceDB.css('visibility', 'hidden');
                    }
                });

            //$("#ddlSourceDB").trigger("change");    //trigger a change to dropdownlist for source database and load its corresponding tables

        });
        $("#ddlSource").trigger("change");


        //get source table
        $("#ddlSourceDB").bind("change", function () {
            //debugger;
            $("#lbSourceTableError").css('visibility', 'hidden');
            $("#ddlSourceTable").css('visibility', 'hidden');
            $("#lbSourceTableError").empty();
            $("#ddlSourceTable").empty();

            var divSourceTable = $("#ddlSourceTable");
            var SelSource = $("#ddlSource").val();
            var SelSourceDB = $("#ddlSourceDB").val();
            @*if (SelSourceDB == null) {
                SelSourceDB = '@ViewBag.SourceDB';
            }*@
            var url = '@Url.Action("GetDBTable", "Analysis")';
            $.get(url, { storage: SelSource, database: SelSourceDB },
                function (data) {
                    //debugger;
                    if (data.success) {
                        // Success, execute js code here
                        divSourceTable.empty();
                        for (var i = 0; i < data.val.length; i++) {
                            if (i == 0) {
                                divSourceTable.append('<option value="' + data.val[i] + '" selected="selected">' + data.val[i] + '</option>');

                                //update source query string
                                $("#taSourceQuery").val("select * from " + data.val[i]);
                            }
                            else
                                divSourceTable.append('<option value="' + data.val[i] + '">' + data.val[i] + '</option>');
                        }
                        divSourceTable.css('visibility', 'visible');

                        $("#ddlSourceTable").trigger("change");
                    }
                    else {
                        // Error, execute js code here
                        $("#lbSourceTableError").html(data.val);
                        $("#lbSourceTableError").css('visibility', 'visible');
                        divSourceTable.css('visibility', 'hidden');
                    }
                });
        });
        //$("#ddlSourceDB").trigger("change");      //commented by Anthony Lai on 2015-09-01 because no need to trigger change


        //update source query when ddlSourceTable change
        $("#ddlSourceTable").bind("change", function () {
            //debugger;
            var SelSource = $("#ddlSource").val();
            var myVal = $("#ddlSourceTable").val();
            if (myVal == null) {
                myVal = '@ViewBag.SourceTB';
            }
            $("#taSourceQuery").val("select * from " + myVal);

            if (SelSource == 'HBase') {
                $("#taSourceQuery").val("scan '" + myVal + "'");
            }
        });
        //$("#ddlSourceTable").trigger("change");


        $("#btRunQuery").bind("click", function () {

            //debugger;
            $("#lbSourceTableError").css('visibility', 'hidden');
            $("#lbSourceTableError").empty();
            $("#lbSourceQueryResult").empty();
            $("#SourceDetailTable").empty();

            var url = "@Url.Action("RunSourceQuery", "Analysis")";
            //$.post(url, {
            //    Source: $("#ddlSource").val(), Destination: $("#ddlDestination").val(),
            //    dbSourceDB: $("#lbSourceDB").val(), dbDestinationDB: $("#lbDestinationDB").val(),
            //    dbSourceTable: $("#lbSourceTable").val(), dbDestinationTable: $("#lbDestinationTable").val()
            //},
            $.get(url, {
                source: $("#ddlSource").val(),
                database: $("#ddlSourceDB").val(),
                table: $("#ddlSourceTable").val(),
                query: $("#taSourceQuery").val()
            },
                function (data) {
                    //debugger;

                    chartsdata = data;

                    if (data.success) {
                        $("#SourceDetailTable").empty();
                        $("#ddlSourceTB_XAxis").empty();
                        $("#ddlSourceTB_YAxis").empty();
                        //$("#SourceDetailTable").append("<table id='tblSourceQueryResult' class='tableStyle'><tr><th class='tableHeader' style='width:60px;'>ID</th><th class='tableHeader'>Name</th></tr></table>");
                        $("#SourceDetailTable").append("<table id='tblSourceQueryResult' class='table table-striped table-bordered table-condensed'></table>");

                        var textCol = "<tr>";
                        var colName = data.val[data.val.length - 1];
                        for (var k = 0; k < colName.length; k++) {
                            textCol = textCol + "<th class='tableHeader' style='width:auto;'>" + colName[k] + "</th>";

                            if (k == 0) {
                                $("#ddlSourceTB_XAxis").append('<option value="' + colName[k] + '" selected="selected">' + colName[k] + '</option>');
                                $("#ddlSourceTB_YAxis").append('<option value="' + colName[k] + '" selected="selected">' + colName[k] + '</option>');
                            }
                            else {
                                $("#ddlSourceTB_XAxis").append('<option value="' + colName[k] + '">' + colName[k] + '</option>');
                                $("#ddlSourceTB_YAxis").append('<option value="' + colName[k] + '">' + colName[k] + '</option>');
                            }
                        }
                        textCol = textCol + "</tr>";
                        $("#tblSourceQueryResult").append(textCol);

                        var text = "";
                        for (var i = 0; i < data.val.length - 1; i++) {
                            //debugger;
                            text = text + "<tr>";
                            var myData = data.val[i];
                            //$("#tblSource tr:last").append("<tr>");
                            for (var j = 0; j < myData.length; j++) {
                                text = text + "<td class='tableCell' style='width:auto; white-space:nowrap; text-overflow: ellipsis; overflow: hidden;'>" + myData[j] + "</td>";
                                //$("#tblSource tr:last").append("<td class='tableCell'>" + myData[j] + "</td>");
                            }
                            text = text + "</tr>"
                            //$("#tblSource td:last").append("</tr>");
                        }

                        if (data.val.length == 2) {
                            $("#lbSourceQueryResult").append("Query Result: " + (data.val.length - 1) + " Row and each with " + colName.length + " Columns");
                        }
                        else if (data.val.length > 2) {
                            $("#lbSourceQueryResult").append("Query Result: " + (data.val.length - 1) + " Rows and each with " + colName.length + " Columns");
                        }
                        else {
                            $("#lbSourceQueryResult").append("Query Result: No Data");
                        }


                        $("#tblSourceQueryResult").append(text);

                        //$("#taSourceQueryResult").empty();

                        //$("#lbSourceTableError").html(data.val);
                        //$("#lbSourceTableError").css('visibility', 'visible');
                        //$("#lbSourceTableError").css('color', 'blue');

                        //$("#taSourceQueryResult").html(data.val);
                    }
                    else {
                        $("#lbSourceTableError").html(data.val);
                        $("#lbSourceTableError").css('visibility', 'visible');
                        $("#lbSourceTableError").css('color', 'red');
                    }
                });
        });

        $("#btRunChart").bind("click", function () {
            //debugger;
            var xAxis = $("#ddlSourceTB_XAxis").val();
            var xAxisIndex = $("#ddlSourceTB_XAxis")[0].selectedIndex;
            if (xAxis == null)
            {

            }
            var yAxis = $("#ddlSourceTB_YAxis").val();
            var yAxisIndex = $("#ddlSourceTB_YAxis")[0].selectedIndex;
            if (yAxis == null)
            {

            }

            drawChart(chartsdata, xAxis, yAxis, xAxisIndex, yAxisIndex);
        });

    });

</script>







<h2>
    @ViewBag.Title.
</h2>

<div id="tabs">
    <ul>
        <li><a href="#tabs-cube">OLAP Cube</a></li>
    </ul>

    @*<div id="tabs-cube" class="framed-application">
        <iframe id="iframeCube" src="http://142.0.252.93:9090/mondrian" frameborder="0" width="1000" height="400"></iframe>
    </div>*@

    <viewdata page="" />

    <div id="tabs-cube" class="framed-application">
        <iframe id="iframeCube" src="http://142.0.252.93:9090/mondrian/testpage.jsp?query=mondrian" frameborder="0" width="1000" height="600" scrolling="auto"></iframe>
    </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
